/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospital.project;


import java.awt.Menu;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author amine
 */
public class patientFrame extends javax.swing.JFrame {

    /**
     * Creates new form patientFrame
     */
    public patientFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SSNPatientL = new javax.swing.JLabel();
        firstNamePatinetL = new javax.swing.JLabel();
        lastNamePatientL = new javax.swing.JLabel();
        dateOutPatientL = new javax.swing.JLabel();
        SSNPatientT = new javax.swing.JTextField();
        firstNamePatientT = new javax.swing.JTextField();
        lastNamePatientT = new javax.swing.JTextField();
        dateOutPatientT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientTable = new javax.swing.JTable();
        insertPatientB = new javax.swing.JButton();
        selectPatientB = new javax.swing.JButton();
        deletePatientB = new javax.swing.JButton();
        homeB = new javax.swing.JButton();
        ubdatePatientB = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dateAddmittedPatientT = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        medicalPatientT = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient");
        setLocation(new java.awt.Point(360, 80));

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));

        SSNPatientL.setText("SSN");

        firstNamePatinetL.setText("first name");

        lastNamePatientL.setText("last name");

        dateOutPatientL.setText("date of checked out");

        SSNPatientT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSNPatientTActionPerformed(evt);
            }
        });

        firstNamePatientT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNamePatientTActionPerformed(evt);
            }
        });

        dateOutPatientT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateOutPatientTActionPerformed(evt);
            }
        });

        patientTable.setBackground(new java.awt.Color(242, 240, 240));
        patientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SSN", "first name", "last name", "date of checked out", "date addmitted", "medical insurance"
            }
        ));
        jScrollPane1.setViewportView(patientTable);

        insertPatientB.setText("Insert");
        insertPatientB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertPatientBActionPerformed(evt);
            }
        });

        selectPatientB.setText("Select");
        selectPatientB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPatientBActionPerformed(evt);
            }
        });

        deletePatientB.setText("Delete");
        deletePatientB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletePatientBActionPerformed(evt);
            }
        });

        homeB.setText("Home");
        homeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeBActionPerformed(evt);
            }
        });

        ubdatePatientB.setText("Update");
        ubdatePatientB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubdatePatientBActionPerformed(evt);
            }
        });

        jLabel1.setText("date addmitted");

        dateAddmittedPatientT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateAddmittedPatientTActionPerformed(evt);
            }
        });

        jLabel2.setText("medical insurance");

        medicalPatientT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalPatientTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(homeB)
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(dateOutPatientL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1)
                                    .addComponent(lastNamePatientL)
                                    .addComponent(firstNamePatinetL)
                                    .addComponent(SSNPatientL)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(insertPatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(selectPatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(deletePatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(ubdatePatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(medicalPatientT)
                                    .addComponent(dateAddmittedPatientT)
                                    .addComponent(firstNamePatientT, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                                    .addComponent(SSNPatientT)
                                    .addComponent(lastNamePatientT)
                                    .addComponent(dateOutPatientT))))
                        .addGap(0, 21, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SSNPatientL, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SSNPatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(homeB, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(firstNamePatinetL, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(firstNamePatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNamePatientL, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNamePatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOutPatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOutPatientL, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateAddmittedPatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medicalPatientT, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(insertPatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletePatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ubdatePatientB, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeBActionPerformed
        if (evt.getSource() == homeB)
        {
            home h = new home ();
            this.setVisible(false);
            h.setVisible(true);
        }
    }//GEN-LAST:event_homeBActionPerformed

    private void dateOutPatientTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateOutPatientTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dateOutPatientTActionPerformed

    private void firstNamePatientTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNamePatientTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNamePatientTActionPerformed

    private void SSNPatientTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSNPatientTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSNPatientTActionPerformed

    private void dateAddmittedPatientTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateAddmittedPatientTActionPerformed
       
    }//GEN-LAST:event_dateAddmittedPatientTActionPerformed

    private void medicalPatientTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalPatientTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_medicalPatientTActionPerformed

    private void selectPatientBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPatientBActionPerformed
         
        try {
            ((DefaultTableModel)patientTable.getModel()).setNumRows(0);
        connection c = new connection();
            String query = "Select * from patient";
            Statement st = c.con.createStatement();
            ResultSet rs = st.executeQuery(query);
           
       DefaultTableModel model = (DefaultTableModel) patientTable.getModel();
        Object []row = new Object[6];
 
            while (rs.next())
            {
                row[0] = rs.getString("SSN");
                row[1] = rs.getString("firstName");
                row[2] = rs.getString("lastName");
                row[3] = rs.getString("dateOfCheckedOut");
                row[4] = rs.getString("dateAddmitted");
                row[5] = rs.getString("medicalInsurance");
                          model.addRow(row);

            }
        } catch (SQLException ex) {
            
            Logger.getLogger(doctorFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_selectPatientBActionPerformed

    private void insertPatientBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertPatientBActionPerformed
         try {      
          connection c = new connection();
         
         String sql = " insert into patient values(? , ? , ? , ? , ? , ?);";
         PreparedStatement pstm = c.con.prepareStatement(sql);
         pstm.setString(1 ,SSNPatientT.getText() );
         pstm.setString(2 , firstNamePatientT.getText());
         pstm.setString(3 , lastNamePatientT.getText() );
         pstm.setString(4 , dateOutPatientT.getText() );
         pstm.setString(5 , dateAddmittedPatientT.getText() );
         pstm.setString(6 , medicalPatientT.getText() );
            
         
         pstm.executeUpdate();
         
         //JOptionPane.showMessageDialog(null,"doctor added Successfully");
         c.con.close();

         
        } catch ( SQLException ex) {

            JOptionPane.showMessageDialog(null,ex);
        }
        catch(NumberFormatException e){
              JOptionPane.showMessageDialog(null,"Type a right values");
        }  
    }//GEN-LAST:event_insertPatientBActionPerformed

    private void deletePatientBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletePatientBActionPerformed
       try {
            connection c = new connection();
            String sql = " Delete from patient where SSN = ?;";
            PreparedStatement pstm = c.con.prepareStatement(sql);
            pstm.setString(1 , SSNPatientT.getText() );
            
            pstm.executeUpdate();
            c.con.close();
           // JOptionPane.showMessageDialog(null, "Book Deleted Successfully");

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_deletePatientBActionPerformed

    private void ubdatePatientBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubdatePatientBActionPerformed
        try {
            connection c = new connection();
            //String sql = " update doctor set first name = " +firstNameT.getText()+ ", last name = " + lastNameT.getText() + ", specilization = " + specilizationT.getText()+ "where SSN = " +SSNT.getText()+";" ;
           String sql = " update patient set firstName = ?, lastName = ?, dateOfCheckedOut = ?, dateAddmitted = ?,medicalInsurance=? where SSN = ?;" ;

         PreparedStatement pstm = c.con.prepareStatement(sql);
         pstm.setString(6 ,SSNPatientT.getText() );
         pstm.setString(1 , firstNamePatientT.getText());
         pstm.setString(2 , lastNamePatientT.getText() );
         pstm.setString(3 , dateOutPatientT.getText() );
         pstm.setString(4 , dateAddmittedPatientT.getText() );
         pstm.setString(5 , medicalPatientT.getText() );
            

            pstm.executeUpdate();
            
            c.con.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ubdatePatientBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patientFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SSNPatientL;
    private javax.swing.JTextField SSNPatientT;
    private javax.swing.JTextField dateAddmittedPatientT;
    private javax.swing.JLabel dateOutPatientL;
    private javax.swing.JTextField dateOutPatientT;
    private javax.swing.JButton deletePatientB;
    private javax.swing.JTextField firstNamePatientT;
    private javax.swing.JLabel firstNamePatinetL;
    private javax.swing.JButton homeB;
    private javax.swing.JButton insertPatientB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNamePatientL;
    private javax.swing.JTextField lastNamePatientT;
    private javax.swing.JTextField medicalPatientT;
    private javax.swing.JTable patientTable;
    private javax.swing.JButton selectPatientB;
    private javax.swing.JButton ubdatePatientB;
    // End of variables declaration//GEN-END:variables
}
